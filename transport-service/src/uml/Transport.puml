@startuml

actor User
participant TransportController
participant TransportServiceImpl
participant TransportRepository

User -> TransportController: createTransport(Transport)
activate TransportController
activate User
TransportController -> TransportServiceImpl: createTransport(Transport)
activate TransportServiceImpl
TransportServiceImpl -> TransportRepository: save(Transport)
activate TransportRepository
TransportRepository -> TransportServiceImpl: Transport saved
deactivate TransportRepository
TransportServiceImpl -> TransportController: Transport created
deactivate TransportServiceImpl
TransportController -> User: Transport created
deactivate TransportController

User -> TransportController: getAllTransports()
activate TransportController
TransportController -> TransportServiceImpl: getAllTransports()
activate TransportServiceImpl
TransportServiceImpl -> TransportRepository: findAll()
activate TransportRepository
TransportRepository -> TransportServiceImpl: List<Transport>
deactivate TransportRepository
TransportServiceImpl -> TransportController: List<Transport>
deactivate TransportServiceImpl
TransportController -> User: List of Transports
deactivate TransportController

User -> TransportController: getTransportById(id)
activate TransportController
alt Transport exists
    TransportController -> TransportServiceImpl: getTransportById(id)
    activate TransportServiceImpl
    TransportServiceImpl -> TransportRepository: findById(id)
    activate TransportRepository
    TransportRepository -> TransportServiceImpl: Optional<Transport>
    deactivate TransportRepository
    TransportServiceImpl -> TransportController: Optional<Transport>
    deactivate TransportServiceImpl
    TransportController -> User: Transport (if found) or Not Found
else Transport not found
    TransportController --> User: Transport Not Found
    deactivate TransportController
    deactivate User
end

User -> TransportController: getTransportNameById(id)
activate TransportController
alt Transport exists
    TransportController -> TransportServiceImpl: getTransportById(id)
    activate TransportServiceImpl
    TransportServiceImpl -> TransportRepository: findById(id)
    activate TransportRepository
    TransportRepository -> TransportServiceImpl: Optional<Transport>
    deactivate TransportRepository
    TransportServiceImpl -> TransportController: Optional<Transport>
    deactivate TransportServiceImpl
    TransportController -> User: Transport Name (if found) or Not Found
else Transport not found
    TransportController --> User: Transport Not Found
    deactivate TransportController
    deactivate User
end

User -> TransportController: getTransportTypeById(id)
activate TransportController
alt Transport exists
    TransportController -> TransportServiceImpl: getTransportById(id)
    activate TransportServiceImpl
    TransportServiceImpl -> TransportRepository: findById(id)
    activate TransportRepository
    TransportRepository -> TransportServiceImpl: Optional<Transport>
    deactivate TransportRepository
    TransportServiceImpl -> TransportController: Optional<Transport>
    deactivate TransportServiceImpl
    TransportController -> User: Transport Type (if found) or Not Found
else Transport not found
    TransportController --> User: Transport Not Found
    deactivate TransportController
    deactivate User
end

@enduml
